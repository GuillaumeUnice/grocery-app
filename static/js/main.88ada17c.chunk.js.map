{"version":3,"sources":["api.js","components/grocery-button/grocery-button.js","grocery-item/grocery-item.js","grocery-form/grocery-form.js","grocery-list/grocery-list.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","getGroceryItems","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","axios","concat","abrupt","sent","stop","apply","this","arguments","removeGroceryItem","_ref2","_callee2","deleteId","_context2","delete","_x","updateGroceryItem","_ref3","_callee3","updateItem","_context3","put","id","objectSpread","_x2","addGroceryItem","_ref4","_callee4","addItem","_context4","post","_x3","TYPES","BaseButton","buttonText","clickHandler","buttonType","react_default","createElement","type","onClick","className","FormButton","props","grocery_button_BaseButton","assign","PrimaryButton","GroceryItem","item","deleteItem","toggleItem","onChange","event","isCompleted","checked","name","quantity","grocery_button_grocery_button","DEFAULT_STATE","GroceryForm","_useState","useState","_useState2","slicedToArray","value","setValue","handleSubmit","preventDefault","onSubmit","placeholder","target","grocery_button_FormButton","GroceryList","data","setData","refreshGroceryItems","then","result","useEffect","_React$useState","React","_React$useState2","setDeleteId","_React$useState3","_React$useState4","setUpdateItem","_React$useState5","_React$useState6","setAddItem","grocery_form_grocery_form","map","groceryItem","index","grocery_item_grocery_item","key","toString","length","App","grocery_list","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88ada17c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'https://peaceful-hollows-25175.herokuapp.com/api';\r\n\r\nexport const getGroceryItems = async () => {\r\n  return await axios(`${API_URL}/grocery`);\r\n};\r\n\r\nexport const removeGroceryItem = async deleteId => {\r\n  return await axios.delete(`${API_URL}/grocery/${deleteId}`);\r\n};\r\n\r\nexport const updateGroceryItem = async updateItem => {\r\n  return await axios.put(`${API_URL}/grocery/${updateItem.id}`, {\r\n    ...updateItem\r\n  });\r\n};\r\n\r\nexport const addGroceryItem = async addItem => {\r\n  return await axios.post(`${API_URL}/grocery`, { ...addItem });\r\n};\r\n","import React from 'react';\r\nimport './grocery-button.css';\r\n\r\nconst TYPES = {\r\n  PRIMARY: 'primary',\r\n  FORM: 'form'\r\n};\r\n\r\nconst BaseButton = ({ buttonText, clickHandler, buttonType }) => {\r\n  return (\r\n    <button type=\"submit\" onClick={clickHandler} className={buttonType}>\r\n      {buttonText}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const PrimaryButton = props => (\r\n  <BaseButton {...props} buttonType={TYPES.PRIMARY} />\r\n);\r\nexport const FormButton = props => (\r\n  <BaseButton {...props} buttonType={TYPES.FORM} />\r\n);\r\n\r\nexport default PrimaryButton;\r\n","import React from 'react';\r\nimport './grocery-item.css';\r\n\r\nimport GroceryButton from '../components/grocery-button/grocery-button';\r\n\r\nconst GroceryItem = ({ item, deleteItem, toggleItem }) => {\r\n  const handleClick = event => {\r\n    deleteItem(item.id);\r\n  };\r\n\r\n  const handleChecked = event => {\r\n    item.isCompleted = !item.isCompleted;\r\n    toggleItem(item);\r\n  };\r\n\r\n  return (\r\n    <div className=\"itemContainer\">\r\n      <label className=\"CheckboxContainer\">\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={handleChecked}\r\n          checked={item.isCompleted ? true : false}\r\n        />\r\n        <span className=\"Checkmark\" />\r\n      </label>\r\n      <span>{item.name}</span>\r\n      <span>{item.quantity}</span>\r\n      <GroceryButton\r\n        type=\"submit\"\r\n        clickHandler={handleClick}\r\n        buttonText={'X'}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default GroceryItem;\r\n","import React, { useState } from 'react';\r\nimport './grocery-form.css';\r\n\r\nimport { FormButton } from '../components/grocery-button/grocery-button';\r\n\r\nconst DEFAULT_STATE = { name: '', quantity: '' }\r\nconst GroceryForm = ({ addGroceryItem }) => {\r\n  const [value, setValue] = useState(DEFAULT_STATE);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (!value || !value.name || !value.quantity) return;\r\n    addGroceryItem(value);\r\n    setValue(DEFAULT_STATE);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add Grocery item\"\r\n        onChange={event => {\r\n          setValue({ ...value, name: event.target.value });\r\n        }}\r\n        value={value.name}\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Quantity\"\r\n        onChange={event => {\r\n          setValue({ ...value, quantity: event.target.value });\r\n        }}\r\n        value={value.quantity}\r\n      />\r\n\r\n      <FormButton\r\n        type=\"submit\"\r\n        clickHandler={handleSubmit}\r\n        buttonText={'ADD'}\r\n      />\r\n    </form>\r\n  );\r\n};\r\nexport default GroceryForm;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n  getGroceryItems,\r\n  removeGroceryItem,\r\n  updateGroceryItem,\r\n  addGroceryItem\r\n} from '../api';\r\nimport GroceryItem from '../grocery-item/grocery-item';\r\nimport GroceryForm from '../grocery-form/grocery-form';\r\n\r\nconst GroceryList = () => {\r\n  const [data, setData] = useState([]);\r\n  const refreshGroceryItems = () => {\r\n    getGroceryItems().then(result => {\r\n      setData(result.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    refreshGroceryItems();\r\n  }, []);\r\n\r\n  const [deleteId, setDeleteId] = React.useState(null);\r\n  useEffect(() => {\r\n    if (!deleteId) {\r\n      return;\r\n    }\r\n    removeGroceryItem(deleteId).then(() => {\r\n      refreshGroceryItems();\r\n    });\r\n  }, [deleteId]);\r\n\r\n  const [updateItem, setUpdateItem] = React.useState({\r\n    id: null,\r\n    quantity: null,\r\n    name: ''\r\n  });\r\n  useEffect(() => {\r\n    if (\r\n      !updateItem ||\r\n      !updateItem.id ||\r\n      !updateItem.name ||\r\n      !updateItem.quantity\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    updateGroceryItem(updateItem).then(() => {\r\n      refreshGroceryItems();\r\n    });\r\n  }, [updateItem]);\r\n\r\n  const [addItem, setAddItem] = React.useState(null);\r\n  useEffect(() => {\r\n    if (!addItem) {\r\n      return;\r\n    }\r\n\r\n    addGroceryItem(addItem).then(() => {\r\n      refreshGroceryItems();\r\n    });\r\n  }, [addItem]);\r\n\r\n  return (\r\n    <div>\r\n      <GroceryForm addGroceryItem={addItem => setAddItem(addItem)} />\r\n      {data &&\r\n        data.map((groceryItem, index) => (\r\n          <GroceryItem\r\n            key={index.toString()}\r\n            item={groceryItem}\r\n            deleteItem={deleteId => setDeleteId(deleteId)}\r\n            toggleItem={updateItem => setUpdateItem(updateItem)}\r\n          />\r\n        ))}\r\n      <footer>Total Item: {data.length}</footer>\r\n    </div>\r\n  );\r\n};\r\nexport default GroceryList;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport GroceryList from './grocery-list/grocery-list';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header>\r\n          <h1>Grocery List</h1>\r\n        </header>\r\n        <div className=\"AppContent\">\r\n          <GroceryList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}